{"version":3,"sources":["components/Banner.png","components/Form.js","components/FilterButton.js","components/Todo.js","components/Contacts/Form2.js","App.js","index.js"],"names":["module","exports","Form","props","useState","name","setName","onSubmit","e","preventDefault","trim","addTask","className","htmlFor","type","id","autoComplete","value","onChange","target","FilterButton","aria-pressed","isPressed","onClick","setFilter","Todo","isEditing","setEditing","newName","setNewName","editFieldRef","useRef","editButtonRef","wasEditing","ref","useEffect","current","usePrevious","editingTemplate","editTask","viewTemplate","defaultChecked","completed","toggleTaskCompleted","deleteTask","focus","Contact","placeholder","FILTER_MAP","All","Active","task","Completed","FILTER_NAMES","Object","keys","App","tasks","setTasks","filter","updatedTasks","map","remainingTasks","editedTaskList","taskList","key","filterList","tasksNoun","length","headingText","listHeadingRef","prevTaskLength","class","src","require","newTask","nanoid","tabIndex","role","aria-labelledby","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1dcf7dcf.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Banner.f3caac45.png\";","import React, { useState } from \"react\";\r\nfunction Form(props) {\r\n  const [name, setName] = useState('');\r\n\r\nfunction handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!name.trim()) {\r\n      return;\r\n    }\r\n    props.addTask(name);\r\n    setName(\"\");\r\n  }\r\n\r\n  function handleChange(e) {\r\n    setName(e.target.value);\r\n  }\r\n\r\n\r\nreturn (\r\n  <form onSubmit={handleSubmit}>\r\n      <h2 className=\"label-wrapper\">\r\n        <label htmlFor=\"new-todo-input\" className=\"label__lg\"> \r\n          Write your Tasks!\r\n        </label>\r\n      </h2>\r\n\r\n      <input\r\n        type=\"text\"\r\n        id=\"new-todo-input\"\r\n        className=\"input input__lg\"\r\n        name=\"text\"\r\n        autoComplete=\"off\"\r\n        value={name}\r\n        onChange={handleChange}\r\n      />\r\n      <button type=\"submit\" className=\"btn btn__primary btn__lg\">\r\n        ADD NEW TASK\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","import React from \"react\";\r\n\r\nfunction FilterButton(props) {\r\n  return (\r\n    <button\r\n      type=\"button\"\r\n      className=\"btn toggle-btn\"\r\n      aria-pressed={props.isPressed}\r\n      onClick={() => props.setFilter(props.name)}\r\n    >\r\n      <span className=\"visually-hidden\">Show </span>\r\n      <span>{props.name}</span>\r\n      <span className=\"visually-hidden\"> tasks</span>\r\n    </button>\r\n  );\r\n}\r\n\r\nexport default FilterButton;\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\n\r\n\r\nfunction usePrevious(value) {\r\n  const ref = useRef();\r\n  useEffect(() => {\r\n    ref.current = value;\r\n  });\r\n  return ref.current;\r\n}\r\n\r\nexport default function Todo(props) {\r\n  const [isEditing, setEditing] = useState(false);\r\n  const [newName, setNewName] = useState('');\r\n\r\n  const editFieldRef = useRef(null);\r\n  const editButtonRef = useRef(null);\r\n\r\n  const wasEditing = usePrevious(isEditing);\r\n\r\n  function handleChange(e) {\r\n    setNewName(e.target.value);\r\n  }\r\n\r\n  function handleSubmit(e) {\r\n    e.preventDefault();\r\n    if (!newName.trim()) {\r\n      return;\r\n    }\r\n    props.editTask(props.id, newName);\r\n    setNewName(\"\");\r\n    setEditing(false);\r\n  }\r\n\r\n  const editingTemplate = (\r\n    <form className=\"stack-small\" onSubmit={handleSubmit}>\r\n      <div className=\"form-group\">\r\n        <label className=\"todo-label\" htmlFor={props.id}>\r\n          New name for {props.name}\r\n        </label>\r\n        <input\r\n          id={props.id}\r\n          className=\"todo-text\"\r\n          type=\"text\"\r\n          value={newName}\r\n          onChange={handleChange}\r\n          ref={editFieldRef}\r\n        />\r\n      </div>\r\n      <div className=\"btn-group\">\r\n\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn todo-cancel\"\r\n          onClick={() => setEditing(false)}\r\n        >\r\n          Cancel\r\n          <span className=\"visually-hidden\">renaming {props.name}</span>\r\n        </button>\r\n        <button type=\"submit\" className=\"btn btn__primary todo-edit\">\r\n          Save\r\n          <span className=\"visually-hidden\">new name for {props.name}</span>\r\n        </button>\r\n      </div>\r\n    </form>\r\n  );\r\n\r\n  const viewTemplate = (\r\n    <div className=\"stack-small\">\r\n      <div className=\"c-cb\">\r\n          <input\r\n            id={props.id}\r\n            type=\"checkbox\"\r\n            defaultChecked={props.completed}\r\n            onChange={() => props.toggleTaskCompleted(props.id)}\r\n          />\r\n          <label className=\"todo-label\" htmlFor={props.id}>\r\n            {props.name}\r\n          </label>\r\n        </div>\r\n        <div className=\"btn-group\">\r\n        <button\r\n          type=\"button\"\r\n          className=\"btn\"\r\n          onClick={() => setEditing(true)}\r\n          ref={editButtonRef}\r\n          >\r\n            Edit <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n          <button\r\n            type=\"button\"\r\n            className=\"btn btn__danger\"\r\n            onClick={() => props.deleteTask(props.id)}\r\n          >\r\n            Delete <span className=\"visually-hidden\">{props.name}</span>\r\n          </button>\r\n        </div>\r\n    </div>\r\n  );\r\n\r\n\r\n  useEffect(() => {\r\n    if (!wasEditing && isEditing) {\r\n      editFieldRef.current.focus();\r\n    }\r\n    if (wasEditing && !isEditing) {\r\n      editButtonRef.current.focus();\r\n    }\r\n  }, [wasEditing, isEditing]);\r\n\r\n\r\n  return <li className=\"todo\">{isEditing ? editingTemplate : viewTemplate}</li>;\r\n}\r\n","import React from 'react';\r\n\r\nconst Contact = () => {\r\n  \r\n  return(\r\n    <form className=\"form\">\r\n      <h2 className=\"label__lg\">HELLO! Please leave your information!</h2>\r\n      <label></label>\r\n      <input className=\"name\"placeholder=\"name\"/>\r\n\r\n      <label></label>\r\n      <input className=\"email\"placeholder=\"email\"/>\r\n\r\n      <label></label>\r\n      <textarea className=\"message\"placeholder=\"message\"></textarea>\r\n      <br></br>\r\n      <button className=\"submit\" type=\"submit\">SUBMIT</button>\r\n</form>\r\n  )\r\n}\r\nexport default Contact","import React, { useState, useRef, useEffect } from \"react\";\r\n\r\nimport Toolbar from \"./components/Toolbar/Toolbar\";\r\n\r\nimport Form from \"./components/Form\";\r\n\r\nimport FilterButton from \"./components/FilterButton\";\r\n\r\nimport Todo from \"./components/Todo\";\r\n\r\nimport { nanoid } from \"nanoid\";\r\n\r\nimport Contact from \"./components/Contacts/Form2\";\r\n\r\n\r\n\r\n\r\n\r\nfunction usePrevious(value) {\r\n\r\n  const ref = useRef();\r\n\r\n  useEffect(() => {\r\n\r\n    ref.current = value;\r\n\r\n  });\r\n\r\n  return ref.current;\r\n\r\n}\r\n\r\n \r\n\r\nconst FILTER_MAP = {\r\n\r\n  All: () => true,\r\n\r\n  Active: task => !task.completed,\r\n\r\n  Completed: task => task.completed\r\n\r\n};\r\n\r\n \r\n\r\nconst FILTER_NAMES = Object.keys(FILTER_MAP);\r\n\r\n \r\n\r\nfunction App(props) {\r\n\r\n  const [tasks, setTasks] = useState(props.tasks);\r\n\r\n  const [filter, setFilter] = useState('All');\r\n\r\n \r\n\r\n  \r\n\r\nfunction toggleTaskCompleted(id) {\r\n\r\n    const updatedTasks = tasks.map(task => {\r\n\r\n      // if this task has the same ID as the edited task\r\n\r\n      if (id === task.id) {\r\n\r\n        // use object spread to make a new obkect\r\n\r\n        // whose `completed` prop has been inverted\r\n\r\n        return {...task, completed: !task.completed}\r\n\r\n      }\r\n\r\n      return task;\r\n\r\n \r\n\r\n      \r\n\r\n    });\r\n\r\n    setTasks(updatedTasks);\r\n\r\n    \r\n\r\n  }\r\n\r\n \r\n\r\n  function deleteTask(id) {\r\n\r\n    const remainingTasks = tasks.filter(task => id !== task.id);\r\n\r\n    setTasks(remainingTasks);\r\n\r\n  }\r\n\r\n \r\n\r\n  function editTask(id, newName) {\r\n\r\n    const editedTaskList = tasks.map(task => {\r\n\r\n    // if this task has the same ID as the edited task\r\n\r\n      if (id === task.id) {\r\n\r\n        //\r\n\r\n        return {...task, name: newName}\r\n\r\n      }\r\n\r\n      return task;\r\n\r\n    });\r\n\r\n    setTasks(editedTaskList);\r\n\r\n  }\r\n\r\n \r\n\r\n  const taskList = tasks\r\n\r\n  .filter(FILTER_MAP[filter])\r\n\r\n  .map(task => (\r\n\r\n    <Todo\r\n\r\n      id={task.id}\r\n\r\n      name={task.name}\r\n\r\n      completed={task.completed}\r\n\r\n      key={task.id}\r\n\r\n      toggleTaskCompleted={toggleTaskCompleted}\r\n\r\n      deleteTask={deleteTask}\r\n\r\n      editTask={editTask}\r\n\r\n    />\r\n\r\n  ));\r\n\r\n \r\n\r\n  const filterList = FILTER_NAMES.map(name => (\r\n\r\n    <FilterButton\r\n\r\n      key={name}\r\n\r\n      name={name}\r\n\r\n      isPressed={name === filter}\r\n\r\n      setFilter={setFilter}\r\n\r\n    />\r\n    \r\n   \r\n  ));\r\n\r\n  \r\n  function addTask(name) {\r\n\r\n    const newTask = { id: \"todo-\" + nanoid(), name: name, completed: false };\r\n\r\n    setTasks([...tasks, newTask]);\r\n\r\n  }\r\n\r\n \r\n\r\n  const tasksNoun = taskList.length !== 1 ? 'tasks' : 'task';\r\n\r\n  const headingText = `${taskList.length} ${tasksNoun} remaining`;\r\n\r\n \r\n\r\n  const listHeadingRef = useRef(null);\r\n\r\n  const prevTaskLength = usePrevious(tasks.length);\r\n\r\n \r\n\r\n  useEffect(() => {\r\n\r\n    if (tasks.length - prevTaskLength === -1) {\r\n\r\n      listHeadingRef.current.focus();\r\n\r\n    }\r\n\r\n  }, [tasks.length, prevTaskLength]);\r\n\r\n \r\n\r\n  return (\r\n\r\n    <div className=\"todoapp stack-large\">\r\n\r\n<img class=\"image\" src={require('./components/Banner.png')}/>\r\n\r\n\r\n    \r\n<Contact/>\r\n\r\n\r\n<Form addTask={addTask} />\r\n\r\n      <div className=\"filters btn-group stack-exception\">\r\n\r\n        {filterList}\r\n\r\n      </div>\r\n\r\n      <h2 id=\"list-heading\" tabIndex=\"-1\" ref={listHeadingRef}>\r\n\r\n        {headingText}\r\n\r\n      </h2>\r\n\r\n      <ul\r\n\r\n        role=\"list\"\r\n\r\n        className=\"todo-list stack-large stack-exception\"\r\n\r\n        aria-labelledby=\"list-heading\"\r\n\r\n      >\r\n\r\n        {taskList}\r\n\r\n      </ul>\r\n\r\n    </div>\r\n\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\n \r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nconst DATA = [\r\n  \r\n  \r\n];\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App tasks={DATA} />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}